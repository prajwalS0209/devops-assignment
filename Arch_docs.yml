#Install Docker and Dependencies (On All Nodes)

sudo apt update -y && sudo apt upgrade -y
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

#Install Container Runtime (Docker)

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io

Enable and start Docker:
  sudo systemctl enable docker && sudo systemctl start docker



Configure sysctl for Kubernetes networking:
  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
  overlay
  br_netfilter
  EOF

  sudo modprobe overlay
  sudo modprobe br_netfilter

  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
  net.bridge.bridge-nf-call-iptables  = 1
  net.bridge.bridge-nf-call-ip6tables = 1
  net.ipv4.ip_forward                 = 1
  EOF
  sudo sysctl --system

#Install Kubernetes (On All Nodes)
#Add Kubernetes Repository

  curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  sudo apt update

#Install kubeadm, kubelet, and kubectl

  sudo apt install -y kubelet kubeadm kubectl
  sudo apt-mark hold kubelet kubeadm kubectl

Enable kubelet service:
  sudo systemctl enable --now kubelet 

#Initialize Kubernetes Master Node

On the Master Node, run:
  sudo kubeadm init --pod-network-cidr=192.168.0.0/16

#Set Up Kubernetes Configuration (On Master)

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Check the node status:
  kubectl get nodes

#Install Calico Networking (On Master Node)
  kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

Check if all the pods are running:
  kubectl get pods -n kube-system



#Join Worker Nodes to the Cluster

On the Master Node, get the join command:
  kubeadm token create --print-join-command #Run this command on the worker nodes 

Example:
  sudo kubeadm join 192.168.1.100:6443 --token <TOKEN> --discovery-token-ca-cert-hash sha256:<HASH>

Verify the worker nodes have joined:
  kubectl get nodes



